{"version":3,"sources":["webpack:///./src/views/createNewQuota.vue?5de5","webpack:///./src/views/createNewQuota.vue?334c","webpack:///src/views/createNewQuota.vue","webpack:///./src/views/createNewQuota.vue?c6fb","webpack:///./src/views/createNewQuota.vue?9f36","webpack:///./src/models/quote.js","webpack:///./src/services/quote_items-service.js","webpack:///./src/services/quote-service.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","model","value","callback","$$v","isValid","expression","_v","staticClass","attrs","verifyQuoteName","quote","$set","staticStyle","_s","message","_e","_l","quote_line_item","index","key","quoteItemsNames","verifyItemName","on","GetItemPrice","directives","name","rawName","verifyQuantity","addLine","quote_line_items","length","$event","removeLine","loading","createQuote","staticRenderFns","component","VAutocomplete","VAvatar","VBtn","VCard","VCol","VContainer","VForm","VIcon","VRow","VTextField","Quote","quoteName","userId","API_URL","API","Quote_items_Service","axios","get","QuoteService","post","quoteId","delete","newQuote"],"mappings":"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","file":"js/chunk-099e9280.6bfb81fe.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./createNewQuota.vue?vue&type=style&index=0&id=23891f42&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./createNewQuota.vue?vue&type=style&index=0&id=23891f42&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-form',{model:{value:(_vm.isValid),callback:function ($$v) {_vm.isValid=$$v},expression:\"isValid\"}},[_c('v-row',[_c('v-col',[_c('h3',[_vm._v(\"Project Quota(Devis)\")]),_c('img',{staticClass:\"img\",attrs:{\"height\":\"30\",\"src\":require(\"../assets\\\\kmerfreelance.png\")}})])],1),_c('v-row',[_c('v-col',{staticClass:\" col- .col-md-4\"},[_c('v-text-field',{staticClass:\"error-combobox\",attrs:{\"outlined\":\"\",\"type\":\"text\",\"rules\":_vm.verifyQuoteName,\"name\":\"quoteName\",\"label\":\"Quote Name\",\"append-icon\":\"mdi-card-plus\",\"required\":\"\"},model:{value:(_vm.quote.quoteName),callback:function ($$v) {_vm.$set(_vm.quote, \"quoteName\", $$v)},expression:\"quote.quoteName\"}})],1)],1),_c('v-card',{staticClass:\"errors\",attrs:{\"flat\":\"\"}},[_c('span',{staticStyle:{\"color\":\"#FB236A\"}},[_vm._v(_vm._s(_vm.message))])]),_c('v-row',{attrs:{\"id\":\"line_item\",\"justify\":\"center\"}},[_c('v-col',{staticClass:\" col-3 .col-md-4\"},[_c('h3',[_vm._v(\" ITEM NAME \")])]),_c('v-col',{staticClass:\" col-2 .col-md-4\"},[_c('h3',[_vm._v(\" QUANTITY \")])]),_c('v-col',{staticClass:\" col-2 .col-md-4\"},[_c('h3')])],1),(_vm.error)?_c('v-row',{staticClass:\" col-10 .col-md-4\",attrs:{\"justify\":\"center\"}}):_vm._e(),_vm._l((_vm.quote_line_items),function(quote_line_item,index){return _c('v-row',{key:index,attrs:{\"justify\":\"center\"}},[_c('v-col',{staticClass:\" col-5 .col-md-4\"},[_c('v-autocomplete',{attrs:{\"chips\":\"\",\"items\":_vm.quoteItemsNames,\"item-text\":\"quote_item_name\",\"outlined\":\"\",\"rules\":_vm.verifyItemName,\"color\":\"white\",\"height\":\"2\",\"name\":\"quote_item_name\",\"label\":\"Item Name\",\"required\":\"\"},on:{\"change\":_vm.GetItemPrice},model:{value:(quote_line_item.quote_item_name),callback:function ($$v) {_vm.$set(quote_line_item, \"quote_item_name\", $$v)},expression:\"quote_line_item.quote_item_name\"}})],1),_c('v-col',{staticClass:\" col-5 .col-md-4\"},[_c('v-text-field',{directives:[{name:\"cloneya-input\",rawName:\"v-cloneya-input\",value:('quantity'),expression:\"'quantity'\"}],staticClass:\"error-combobox\",attrs:{\"outlined\":\"\",\"type\":\"number\",\"name\":\"quantity\",\"rules\":_vm.verifyQuantity,\"label\":\"Quantity\",\"append-icon\":\"mdi-numeric-1-box-multiple\",\"required\":\"\"},model:{value:(quote_line_item.quantity),callback:function ($$v) {_vm.$set(quote_line_item, \"quantity\", $$v)},expression:\"quote_line_item.quantity\"}})],1),_c('v-col',{staticClass:\" col-1 .col-md-4\"},[_c('v-avatar',{attrs:{\"color\":\"primary\",\"x-large\":\"\"},on:{\"click\":_vm.addLine}},[_c('v-icon',{staticClass:\"mdi-108px mdi-light\"},[_vm._v(\"mdi-playlist-plus\")])],1)],1),_c('v-col',{staticClass:\" col-1 .col-md-4\"},[(index + 1 === _vm.quote_line_items.length)?_c('v-avatar',{attrs:{\"color\":\"error\",\"x-large\":\"\"},on:{\"click\":function($event){return _vm.removeLine(index)}}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"mdi-delete-forever\")])],1):_vm._e()],1)],1)}),_c('v-row',[_c('v-col',{staticClass:\"col-8 .col-md-4\"}),_c('v-col',{staticClass:\"col-4 .col-md-4\"},[_c('v-btn',{staticClass:\"log-btn\",attrs:{\"block\":\"\",\"x-large\":\"\",\"loading\":_vm.loading,\"disabled\":!_vm.isValid,\"color\":\"#10195D\",\"name\":\"createQuote\"},on:{\"click\":_vm.createQuote}},[_vm._v(\" create quote \")])],1)],1)],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    \r\n    <v-container>\r\n        <v-form v-model=\"isValid\"> \r\n            <v-row>\r\n                <v-col>\r\n                    <h3>Project Quota(Devis)</h3>\r\n                    <img class=\"img\" height=\"30\" src=\"../assets\\kmerfreelance.png\">\r\n                </v-col>\r\n            </v-row>\r\n\r\n            <v-row>\r\n                \r\n                <v-col class=\" col- .col-md-4\">\r\n                    \r\n                    <v-text-field\r\n                    class=\"error-combobox\"\r\n                    outlined\r\n                    type=\"text\"\r\n                    v-model=\"quote.quoteName\"\r\n                    :rules=\"verifyQuoteName\"\r\n                    name=\"quoteName\"\r\n                    label=\"Quote Name\"\r\n                    append-icon=\"mdi-card-plus\"\r\n                    required\r\n                    >\r\n                    </v-text-field>\r\n                    \r\n                </v-col>\r\n            </v-row>\r\n\r\n            <v-card\r\n            flat\r\n            class=\"errors\"\r\n            >\r\n            \r\n                <span style=\"color:#FB236A;\">{{message}}</span>\r\n            \r\n            </v-card>\r\n\r\n\r\n            <!-- ====================================quote TITTLE=============================== -->\r\n\r\n            <v-row id = \"line_item\" justify=\"center\">\r\n                <v-col class=\" col-3 .col-md-4\">\r\n                    <h3 >\r\n                    ITEM NAME\r\n                    </h3>\r\n                </v-col>\r\n\r\n                <v-col class=\" col-2 .col-md-4\">\r\n                    <h3 >\r\n                    QUANTITY\r\n                    </h3>\r\n                </v-col>\r\n\r\n\r\n                <v-col class=\" col-2 .col-md-4\">\r\n                    <h3 >\r\n                    \r\n                    </h3>\r\n                </v-col>\r\n            </v-row>\r\n\r\n            \r\n\r\n            <v-row v-if=\"error\" class=\" col-10 .col-md-4\" justify=\"center\">\r\n\r\n            </v-row>\r\n\r\n            <!-- ============================================================================== -->\r\n                <!-- v-if=\"quoteItemsNames\"     -->\r\n                <v-row  justify=\"center\"\r\n                v-for=\"(quote_line_item, index) in quote_line_items\" :key=\"index\"\r\n                >\r\n                    <v-col class=\" col-5 .col-md-4\">\r\n                        <v-autocomplete\r\n                        chips\r\n                        :items=\"quoteItemsNames\"\r\n                        item-text=\"quote_item_name\"\r\n                        outlined\r\n                        v-model=\"quote_line_item.quote_item_name\"\r\n                        @change=\"GetItemPrice\"\r\n                        :rules=\"verifyItemName\"\r\n                        color=\"white\"\r\n                        height=\"2\" \r\n                        name=\"quote_item_name\"\r\n                        label=\"Item Name\"\r\n                        required\r\n                        >\r\n                            <!-- <option v-for=\"(quoteItemsName, key) in quoteItemsNames\" :value=\"quoteItemsName.name\" :key=\"key\">{{ quoteItemsName.name }}</option> -->\r\n                        </v-autocomplete>\r\n                    </v-col>\r\n\r\n                    <v-col class=\" col-5 .col-md-4\">\r\n                        <v-text-field\r\n                        class=\"error-combobox\"\r\n                        outlined\r\n                        v-model=\"quote_line_item.quantity\"\r\n                        type=\"number\"\r\n                        name=\"quantity\"\r\n                        :rules=\"verifyQuantity\"\r\n                        v-cloneya-input=\"'quantity'\"\r\n                        label=\"Quantity\"\r\n                        append-icon=\"mdi-numeric-1-box-multiple\"\r\n                        required\r\n                        >\r\n                        </v-text-field>\r\n                    </v-col>\r\n\r\n                    <v-col class=\" col-1 .col-md-4\">\r\n                    \r\n                        <v-avatar \r\n                        color=\"primary\"\r\n                        @click=\"addLine\"\r\n                        x-large\r\n                        >\r\n                            <v-icon class=\"mdi-108px mdi-light\">mdi-playlist-plus</v-icon>\r\n                        </v-avatar> \r\n\r\n                        \r\n                    </v-col>\r\n\r\n\r\n                    <v-col class=\" col-1 .col-md-4\">\r\n                        \r\n                        <v-avatar \r\n                        color=\"error\"\r\n                        v-if=\"index + 1 === quote_line_items.length\"\r\n                        @click=\"removeLine(index)\"\r\n                        x-large\r\n                        >\r\n                            <!-- <v-icon dark>mdi-delete</v-icon>  -->\r\n                            <v-icon dark>mdi-delete-forever</v-icon> \r\n                        </v-avatar>\r\n\r\n                        \r\n\r\n                    </v-col>\r\n\r\n                    \r\n                </v-row>\r\n            \r\n\r\n            <v-row>\r\n                <v-col class=\"col-8 .col-md-4\">\r\n\r\n                </v-col>\r\n                <v-col class=\"col-4 .col-md-4\">\r\n                    <v-btn @click=\"createQuote\"\r\n                    block\r\n                    x-large\r\n                    :loading=\"loading\"\r\n                    :disabled=\"!isValid\"\r\n                    color=\"#10195D\"\r\n                    class=\"log-btn\"\r\n                    name=\"createQuote\"\r\n                    >\r\n                    create quote\r\n                    </v-btn>\r\n                </v-col>\r\n            </v-row>\r\n        </v-form>\r\n    </v-container>\r\n\r\n</template>\r\n\r\n<script>\r\nimport Quote from '../models/quote';\r\nimport Quote_items_Service from '../services/quote_items-service';\r\n import quoteService from '../services/quote-service'\r\n\r\nexport default {\r\n    name : \"createNewQuota\",\r\n\r\n    // props: {\r\n    //     numLabels: {\r\n    //         type: Number, // type of the property\r\n    //         required: (true|false), // is this prop required or not?\r\n    //         default: 0 // default value for this prop\r\n    //     }\r\n    // },\r\n    \r\n    data(){\r\n        \r\n        return{\r\n            isValid : true,\r\n            blockRemoval: true,\r\n            price: null,\r\n            inputGroup: 0,\r\n            loading: false,    //state of the page that is if loading a skeleton loader shall be displayed\r\n            quoteName : null,   //the name that shall be given to the quote\r\n            quoteItems: null,   //all the quote component are stored here, array of objects, from db\r\n            quoteItemsNames:[], // the name of each item is stored here in the form [elm name,...] constructed datastructure\r\n            message: null,       //keeps track of all error message\r\n            quote: new Quote('','',''),   //here is the quote object\r\n            quote_line_items:[],          // collection of the the quote elements\r\n            verifyQuoteName: [ \r\n                v => !!v  || 'quote Name is required',\r\n                v => v && v.length >= 4 || 'quote Name must be greater than 3 characters'\r\n            ],\r\n            verifyQuoteElement: [\r\n                v => !!v  || 'Number of elements required',\r\n                v => v && v > 0 || 'quote must have atleast one element'\r\n            ],\r\n            verifyItemName: [\r\n                v => !!v  || 'Please make a valid selection',\r\n            ],\r\n            verifyQuantity: [\r\n                v => !!v  || 'Please add a valid value',\r\n            ],\r\n  \r\n        }\r\n    },\r\n\r\n    mounted () {\r\n        this.addLine()\r\n        this.useUserId()\r\n    },\r\n\r\n    created () {\r\n        // fetch the data when the view is created and the data is (the quote Items)\r\n        // already being observed\r\n        this.fetchData()\r\n    },\r\n    watch: {\r\n        // call again the method if the route changes\r\n        '$route': 'fetchData',\r\n        quote_line_items () {\r\n            this.blockRemoval = this.quote_line_items.length <= 1\r\n        }\r\n    },\r\n    methods: {\r\n    \r\n        useUserId(){\r\n            if(this.getUserID){\r\n                this.quote.userId = this.$store.state.auth.user.id\r\n            }\r\n        },\r\n        \r\n        addLine () {\r\n            let checkEmptyquote_line_items = this.quote_line_items.filter(quote_line_item => quote_line_item.quote_item_name === null)\r\n            if (checkEmptyquote_line_items.length >= 1 && this.quote_line_items.length > 0) {\r\n                this.message = \"Please fill the last line before adding a new one !\"\r\n                return\r\n            }\r\n            this.quote_line_items.push({\r\n                quote_item_name : null,\r\n                quantity       : null, \r\n            })\r\n        },\r\n\r\n        removeLine (quote_line_itemId) {\r\n            if (!this.blockRemoval) {\r\n                this.quote_line_items.splice(quote_line_itemId, 1)\r\n            }\r\n        },\r\n        \r\n        fetchData () {\r\n            this.error = this.quoteItems = null\r\n            this.loading = true\r\n            //const fetchedId = this.$route.params.id\r\n            // replace `getPost` with your data fetching util / API wrapper\r\n            Quote_items_Service.getQuoteItems()\r\n                .then( resData => { \r\n                    this.loading = false\r\n                    this.quoteItems = resData.data\r\n                    for(let i = 0; i < resData.data.length; i++ ){\r\n                        \r\n                        this.quoteItemsNames.push(resData.data[i].quote_item_name)\r\n                        //console.log(this.quoteItemsNames[i])\r\n                        \r\n                    }\r\n                    //console.log(this.quoteItemsNames)\r\n                })\r\n                .catch (err => {\r\n                    return{\r\n                        message: err  || 'An error ocurred while fetching the quote components please verify your internet conection and try again letter'\r\n                    }\r\n                });\r\n            \r\n        },\r\n        GetItemPrice(event){\r\n        \r\n            for(let i = 0; i < this.quoteItems.length; i++){\r\n                //console.log(event)\r\n                if(this.quoteItems[i].quote_item_name === event){\r\n                    this.quote_line_items.price = this.quoteItems[i].quote_item_price\r\n                }\r\n            }\r\n        },\r\n        validate () {\r\n            this.$refs.form.validate()\r\n        },\r\n\r\n        createQuote(){\r\n            this.loading = true;\r\n            this.$validator.validateAll().then(isValid => {\r\n                if (!isValid) {\r\n                    this.loading = false;\r\n                    return;\r\n                }\r\n                this.quote.quote_line_items = this.quote_line_items\r\n                console.log(this.quote)\r\n\r\n                quoteService.createQuote(this.quote)\r\n                    .then(data => {\r\n                        this.loading = false;\r\n                        this.$router.push('allQuota')\r\n                        return data;\r\n                    })\r\n                    .catch(err =>{ \r\n                        return err || 'Unable to save quote please check your connection and try again'\r\n                    });\r\n            \r\n                \r\n\r\n            });\r\n        }\r\n    },\r\n\r\n    computed: {\r\n      currentUser() {\r\n        return this.$store.state.auth.user;\r\n      },\r\n      getUserID(){\r\n         return this.$store.state.auth.user.id;\r\n      }\r\n    },\r\n    // useUserId(){\r\n    //     if(this.getUserID){\r\n    //         this.quote.userId = this.getUserID()\r\n    //     }\r\n    // },\r\n    \r\n    \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.inputs{\r\n    height: 10px;\r\n}\r\n.itemSelectionTag{\r\n    -webkit-writing-mode: horizontal-tb !important;\r\n    text-rendering: auto;\r\n    color: -internal-light-dark(black, white);\r\n    letter-spacing: normal;\r\n    word-spacing: normal;\r\n    text-transform: none; \r\n    text-indent: 0px;\r\n    text-shadow: none;\r\n    display: inline-block;\r\n    text-align: start;\r\n    appearance: menulist;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    white-space: pre;\r\n    -webkit-rtl-ordering: logical;\r\n    background-color: -internal-light-dark(rgb(255, 255, 255), rgb(59, 59, 59));\r\n    cursor: default;\r\n    margin: 0em;\r\n    font: 400 13.3333px Arial;\r\n    border-radius: 0px;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-color: -internal-light-dark(rgb(118, 118, 118), rgb(195, 195, 195));\r\n    border-image: initial;\r\n\r\n    border: solid 1px grey;\r\n    height: 53px;\r\n    border-radius: 5%; \r\n}\r\n.log-btn{\r\n  background-color:#10195D;\r\n  color: #ffffff;\r\n} \r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./createNewQuota.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./createNewQuota.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./createNewQuota.vue?vue&type=template&id=23891f42&scoped=true&\"\nimport script from \"./createNewQuota.vue?vue&type=script&lang=js&\"\nexport * from \"./createNewQuota.vue?vue&type=script&lang=js&\"\nimport style0 from \"./createNewQuota.vue?vue&type=style&index=0&id=23891f42&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"23891f42\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAutocomplete } from 'vuetify/lib/components/VAutocomplete';\nimport { VAvatar } from 'vuetify/lib/components/VAvatar';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VForm } from 'vuetify/lib/components/VForm';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VAutocomplete,VAvatar,VBtn,VCard,VCol,VContainer,VForm,VIcon,VRow,VTextField})\n","// export default class Quote_line_items {\r\n//     constructor(quote_item_name, quantity) {\r\n//         this.quote_item_name = quote_item_name;\r\n//         this.quantity = quantity;\r\n//     }\r\n// }\r\n\r\nexport default class Quote {\r\n    constructor(quoteName, userId, quote_line_items) {\r\n        this.quoteName = quoteName; \r\n        this.userId = userId; \r\n        this.quote_line_items = quote_line_items;\r\n    }\r\n}","import axios from 'axios';\r\nimport API from './API'\r\n\r\nconst API_URL = API + 'quote_items/';\r\n\r\n\r\n\r\nclass Quote_items_Service {\r\n\r\n    getQuoteItems() {\r\n        return axios\r\n            .get(API_URL);\r\n    }\r\n}\r\n\r\nexport default new Quote_items_Service()","//import http from \"../http-common\";\r\nimport axios from 'axios';\r\nimport API from './API'\r\nconst API_URL = API + 'quotes';\r\n\r\nclass QuoteService {\r\n\r\n    createQuote(quote) {\r\n        return axios\r\n            .post(API_URL, quote);\r\n    }\r\n\r\n    getAllQuotes(userId) {\r\n        return axios\r\n            .get(API_URL + '/' + userId)\r\n    }\r\n\r\n    deleteQuote(userId, quoteId) {\r\n        return axios\r\n            .delete(API_URL + '/' + userId + '/' + quoteId)\r\n    }\r\n\r\n    updateQuote(userId, quoteId, newQuote) {\r\n        axios.delete(API_URL + '/' + userId + '/' + quoteId)\r\n        axios.post(API_URL, newQuote);\r\n    }\r\n\r\n}\r\n\r\nexport default new QuoteService();"],"sourceRoot":""}